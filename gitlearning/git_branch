#create new brach and switch to the new branch
[root@aliyun TEST]# git checkout -b dev
Switched to a new branch 'dev'

#查看当前分支
[root@aliyun TEST]# git branch
* dev
  master

#将dev 合并至 master
[root@aliyun TEST]# git merge dev
Updating 3d92392..f44f83c
Fast-forward
gitlearning/git_branch |    8 ++++++++
1 files changed, 8 insertions(+), 0 deletions(-)
create mode 100644 gitlearning/git_branch
[root@aliyun TEST]# cd gitlearning/

#合并后删除分支
[root@aliyun gitlearning]# git branch -d dev
Deleted branch dev (was f44f83c).
[root@aliyun gitlearning]# git branch
* master

#解决合并冲突
[root@aliyun TEST]# git branch
  feature1
  * master
  [root@aliyun TEST]# 
  [root@aliyun TEST]# 
  [root@aliyun TEST]# git merge feature1
  Auto-merging README.md
  CONFLICT (content): Merge conflict in README.md
  Automatic merge failed; fix conflicts and then commit the result.
  [root@aliyun TEST]# git status
  # On branch master
  # Unmerged paths:
  #   (use "git add/rm <file>..." as appropriate to mark resolution)
  #
  #       both modified:      README.md
  #
  no changes added to commit (use "git add" and/or "git commit -a")

#根据提示修改冲突文件 合并冲突
  [root@aliyun TEST]# cat README.md 
  # TEST
  add one
  add two

  git commit exercise
  Git is a distributed version control system.
  Git is free software distributed under the GPL.
  Git is free software distributed under the GPL.
  Git tracks changes of files.
  <<<<<<< HEAD
  Add simple example
  =======
  exercise for git conflict
  >>>>>>> feature1

# 分支合并前删除 git会提示报错，可强制删除
[root@aliyun TEST]# git add test 
[root@aliyun TEST]# git status
# On branch feature-test
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#       new file:   test
#
[root@aliyun TEST]# git commit -m "add feature test"
[feature-test 835b4c2] add feature test
 1 files changed, 1 insertions(+), 0 deletions(-)
  create mode 100644 test
  [root@aliyun TEST]# git checkout dev
  Switched to branch 'dev'
  [root@aliyun TEST]# git branch -d feature-test
  error: The branch 'feature-test' is not fully merged.
  If you are sure you want to delete it, run 'git branch -D feature-test'.
  [root@aliyun TEST]# 
  [root@aliyun TEST]# git branch -D feature-test
  Deleted branch feature-test (was 835b4c2).
  [root@aliyun TEST]# git branch 
  * dev
  feature1
  master




branch 相关命令
git branch
git branch <name>
git checkout <name>
git checkout -b <name>
git merge <name>
git branch -d <name>
git branch -D <name>
git branch --set-upstream <name> origin/<name>
